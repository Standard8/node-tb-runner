#!/usr/bin/env node

var VERSION = require("../package.json").version;
var program = require("commander");
var run = require("../lib/run");

program
  .version(VERSION)
  .option("-b, --binary <path>", "Path of Thunderbird binary to use.")
  .option("--binary-args <CMDARGS>", "Pass additional arguments into Thunderbird.")
  .option("-p, --profile <path>", "Path or name of Thunderbird profile to use.")
  .option("-v, --verbose", "More verbose logging to stdout.")
  .option("--new-instance", "Use a new instance")
  .option("--no-remote", "Do not allow remote calls")
  .option("--foreground", "Bring Thunderbird to the foreground")
  .option("-l, --listen <port>", "Start the debugger server on a specific port.")

program
  .command("start")
  .description("Start Thunderbird")
  .action(function() {
    console.log(Object.keys(program))
    run({
      binary: program.binary || process.env.JPM_THUNDERBIRD_BINARY || "thunderbird",
      profile: program.profile,
      "new-instance": !!program.newInstance ? true : false,
      "foreground": !!program.foreground ? true : false,
      "no-remote": !program.remote ? true : false,
      "binary-args": program.binaryArgs || "",
      "listen": program.listen || 6000
    })
    .then(function(results) {
      var thunderbird = results.process;
      if (program.verbose) {
        thunderbird.stdout.pipe(process.stdout)
      }
    }, console.exception);
  });

program.parse(process.argv);
